<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxkj.mapper.GiftcardMapper">

        <!-- 通用查询映射结果 -->
        <resultMap id="BaseResultMap" type="com.lxkj.entity.Giftcard">
            <id column="id" property="id" />
            <result column="serial" property="serial" />
            <result column="passcode" property="passcode" />
            <result column="status" property="status" />
            <result column="create_time" property="createTime" />
            <result column="update_time" property="updateTime" />
            <result column="state" property="state" />
            <result column="use" property="use" />
            <result column="type" property="type" />
            <result column="occupant" property="occupant" />
        </resultMap>

        <!-- 通用查询结果列 -->
        <sql id="Base_Column_List">
            id, serial, passcode, status, create_time, update_time
        </sql>

        <select id="queryGiftcardPageByOrderId" resultMap="BaseResultMap" parameterType="java.util.Map">
            SELECT a.*,rg.state as state
            FROM giftcard a INNER JOIN (select rg.giftcard_id, rg.state from retailer_giftcard rg where rg.order_id=#{orderId, jdbcType=VARCHAR}) rg on a.id=rg.giftcard_id
            ORDER BY serial asc LIMIT #{page, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER}
        </select>

        <select id="countGiftcardPageByOrderId" resultType="Long" parameterType="java.util.Map">
            SELECT count(1)
            FROM giftcard a INNER JOIN (select rg.giftcard_id, rg.state from retailer_giftcard rg where rg.order_id=#{orderId, jdbcType=VARCHAR}) rg on a.id=rg.giftcard_id
        </select>

        <select id="queryGiftcardPageByMemberId" resultMap="BaseResultMap" parameterType="java.util.Map">
            SELECT g.*, rg.state state, rg.`status` occupant
            FROM giftcard g INNER JOIN (select rg.giftcard_id, rg.state, rg.`status` from retailer_giftcard rg where rg.member_id=#{memberId, jdbcType=VARCHAR}) rg
            on g.id=rg.giftcard_id
            ORDER BY serial ASC LIMIT #{page, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER}
        </select>

        <select id="countGiftcardPageByMemberId" resultType="Long" parameterType="java.util.Map">
            SELECT count(1)
            FROM giftcard g INNER JOIN (select rg.giftcard_id, rg.state, rg.`status` from retailer_giftcard rg where rg.member_id=#{memberId, jdbcType=VARCHAR}) rg
            on g.id=rg.giftcard_id
        </select>

        <select id="queryGiftcardPage" resultMap="BaseResultMap" parameterType="java.util.Map">
            SELECT g.*, r.name occupant
            FROM giftcard g LEFT JOIN retailer_giftcard rg on g.id=rg.giftcard_id LEFT JOIN retailer r on rg.member_id=r.member_id
            <where>
                r.`type`=1
                <if test="keyword!=null and keyword!=''">
                    and g.serial like concat('%', #{keyword, jdbcType=VARCHAR}, '%')
                </if>
                <if test="status!=null and status!=''">
                    and g.`status` = #{status, jdbcType=VARCHAR}
                </if>
                <if test="type!=null and type!=''">
                    and g.`type` = #{type, jdbcType=VARCHAR}
                </if>
                <if test="occupant!=null and occupant!=''">
                    and r.`name` like concat('%', #{occupant, jdbcType=VARCHAR}, '%')
                </if>
            </where>
            order by serial asc
            LIMIT #{page, jdbcType=INTEGER}, #{limit, jdbcType=INTEGER}
        </select>

        <select id="countGiftcardPage" resultType="Long" parameterType="java.util.Map">
            SELECT count(1)
            FROM giftcard g LEFT JOIN retailer_giftcard rg on g.id=rg.giftcard_id LEFT JOIN retailer r on rg.member_id=r.member_id
            <where>
                r.`type`=1
                <if test="keyword!=null and keyword!=''">
                    and g.serial like concat('%', #{keyword, jdbcType=VARCHAR}, '%')
                </if>
                <if test="status!=null and status!=''">
                    and g.`status` = #{status, jdbcType=VARCHAR}
                </if>
                <if test="type!=null and type!=''">
                    and g.`type` = #{type, jdbcType=VARCHAR}
                </if>
                <if test="occupant!=null and occupant!=''">
                    and r.`name` like concat('%', #{occupant, jdbcType=VARCHAR}, '%')
                </if>
            </where>
        </select>

</mapper>
